@using Entities
@using Business
@rendermode InteractiveServer

<hr/>
<select class="form-control shadow-sm border-primary" onchange="@CategoryChanged">
    <option value="">Seleccione categoria...</option>
    @foreach(var category in categories)
    {
        <option value="@category.CategoryId">@category.CategoryName</option>
    }
</select>
<hr />



<table class="table table-hover table-bordered">
    <thead>
        <tr>
            <th>Referencia</th>
            <th>Nombre de producto</th>
            <th>Categoria</th>
            <th>Cantidad</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in temporalProducts)
        {
            <tr>
                <td>@product.ProductId</td>
                <td>@product.ProductName</td>
                <td>@product.CategoryId</td>
                <td>@product.TotalQuantity</td>
                <td><a class="text-decoration-none text-primary fw-bolder" href="product/update/@product.ProductId">Editar</a></td>
            </tr>
        }
    </tbody>
</table>

@code {
    List<ProductEntity> products = new();
    List<ProductEntity> temporalProducts = new();

    List<CategoryEntity> categories = new();


    protected override async Task OnInitializedAsync()
    {
        products = await B_Product.ProductList();
        temporalProducts = products;
        categories = await B_Category.CategoryList();
    }

    private void CategoryChanged(ChangeEventArgs eventArgs)
    {
        if (eventArgs.Value?.ToString() == "") temporalProducts = products;
        else temporalProducts = products.Where(c => c.CategoryId == eventArgs.Value?.ToString()).ToList();
    }
}
