@using Entities
@using Business
@inject NavigationManager NavManager;
@rendermode InteractiveServer

<div>
    <EditForm Model="@oProduct" OnValidSubmit="@SaveProduct">
        <div class="form-group">
            <label for="ProductId">Referencia:</label>
            <InputText id="ProductId" @bind-Value="oProduct.ProductId" class="form-control" required />
        </div>
        <div class="form-group">
            <label for="ProductName">Nombre del producto:</label>
            <InputText id="ProductName" @bind-Value="oProduct.ProductName" class="form-control" required />
        </div>
        <div class="form-group">
            <label for="ProductDescription">Descripcion:</label>
            <InputTextArea id="ProductDescription" @bind-Value="oProduct.ProductDescription" class="form-control" required />
        </div>
        <div class="form-group">
            <label for="CategoryId">Categoria:</label>
            <InputSelect id="CategoryId" @bind-Value="oProduct.CategoryId" class="form-control" required>
                <option>Seleccione la categoria...</option>
                @foreach (var category in categories)
                {
                    <option value="@category.CategoryId">@category.CategoryName</option>
                }
            </InputSelect>
        </div>

        <button type="submit" class="btn btn-primary mt-2">Guardar Producto</button>
    </EditForm>
</div>

@code {
    private ProductEntity oProduct = new();
    private List<CategoryEntity> categories = new();

    protected override async Task OnInitializedAsync()
    {
        categories = await B_Category.CategoryList();
    }

    private async Task SaveProduct()
    {
        await B_Product.CreateProduct(oProduct);
        NavManager.NavigateTo("product/list");
    }

}
